<?php
/**
 * @package     Joomla.UnitTest
 * @subpackage  Crypt
 *
 * @copyright   Copyright (C) 2005 - 2011 Open Source Matters, Inc. All rights reserved.
 * @license     GNU General Public License version 2 or later; see LICENSE
 */

/**
 * Test class for JCrypt.
 * Generated by PHPUnit on 2012-03-21 at 21:17:14.
 *
 * @package     Joomla.UnitTest
 * @subpackage  Crypt
 * @since       11.1
 */
class JCryptTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @var JCrypt
	 */
	protected $object;

    protected $mockJCryptCipher;
    protected $mockJCryptKey;
	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 *
	 * @return void
	 */
	protected function setUp()
	{
		parent::setUp();

        $this->mockJCryptCipher = $this->getMock('JCryptCipherSimple');
        $this->mockJCryptKey = $this->getMock('JCryptKey', null, array('simple'));
		$this->object = new JCrypt($this->mockJCryptCipher, $this->mockJCryptKey);
	}

	/**
	 * Test decrypting by JCryptCipher
	 *
	 * @return void
	 */
	public function testDecrypt()
	{
        $this->mockJCryptCipher->expects($this->once())->method('decrypt');
        $this->object->decrypt('some test data that makes no sense');
	}

	/**
	 * Test encrypting by JCryptCipher
	 *
	 * @return void
	 */
	public function testEncrypt()
	{
        $this->mockJCryptCipher->expects($this->once())->method('encrypt');
        $this->object->encrypt('some test data that makes no sense');
	}

	/**
	 * Test calling to generate key via JCryptCipher
	 *
	 *
	 * @return void
	 */
	public function testGenerateKey()
	{
        $this->mockJCryptCipher->expects($this->once())->method('generateKey');
        $this->object->generateKey();
	}

	/**
	 * Test setting cypher key
	 *
	 *
	 * @return void
	 */
	public function testSetKey()
	{
        $this->object = new JCrypt(new JCryptCipherSimple());
        $this->mockJCryptKey = $this->getMock('JCryptKey', null, array('NotSimple', 'public_key', 'private_key'));

        $this->object->setKey($this->mockJCryptKey);
        $this->setExpectedException('InvalidArgumentException', 'Invalid key of type: NotSimple.  Expected simple.');
        $this->object->encrypt('some test data that makes no sense');
	}

	/**
	 * Test...
	 *
	 * @return void
	 */
	public function testGenRandomBytes()
	{
		// We're just testing wether the value has the expected length.
		// We obviously can't test the result since it's random.

		$randomBytes16 = JCrypt::genRandomBytes();
		$this->assertEquals(strlen($randomBytes16), 16);

		$randomBytes8 = JCrypt::genRandomBytes(8);
		$this->assertEquals(strlen($randomBytes8), 8);

		$randomBytes17 = JCrypt::genRandomBytes(17);
		$this->assertEquals(strlen($randomBytes17), 17);
	}
}
