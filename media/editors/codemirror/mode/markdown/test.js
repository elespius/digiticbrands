(function(){var b=CodeMirror.getMode({tabSize:4},"markdown");function a(c){test.mode(c,b,Array.prototype.slice.call(arguments,1));}a("plainText","foo");
a("trailingSpace1","foo ");a("trailingSpace2","foo[trailing-space-a  ][trailing-space-new-line  ]");a("trailingSpace3","foo[trailing-space-a  ][trailing-space-b  ][trailing-space-new-line  ]");
a("trailingSpace4","foo[trailing-space-a  ][trailing-space-b  ][trailing-space-a  ][trailing-space-new-line  ]");a("codeBlocksUsing4Spaces","    [comment foo]");
a("codeBlocksUsing4SpacesIndentation","    [comment bar]","        [comment hello]","            [comment world]","    [comment foo]","bar");a("codeBlocksUsing4SpacesIndentation"," foo","    [comment bar]","        [comment hello]","    [comment world]");
a("codeBlocksUsing1Tab","\t[comment foo]");a("inlineCodeUsingBackticks","foo [comment `bar`]");a("blockCodeSingleBacktick","[comment `]","foo","[comment `]");
a("unclosedBackticks","foo [comment `bar]");a("doubleBackticks","[comment ``foo ` bar``]");a("consecutiveBackticks","[comment `foo```bar`]");a("consecutiveBackticks","[comment `foo```bar`] hello [comment `world`]");
a("unclosedBackticks","[comment ``foo ``` bar` hello]");a("closedBackticks","[comment ``foo ``` bar` hello``] world");a("atxH1","[header # foo]");a("atxH2","[header ## foo]");
a("atxH3","[header ### foo]");a("atxH4","[header #### foo]");a("atxH5","[header ##### foo]");a("atxH6","[header ###### foo]");a("atxH6NotH7","[header ####### foo]");
a("setextH1","foo","[header =]");a("setextH1","foo","[header ===]");a("setextH2","foo","[header -]");a("setextH2","foo","[header ---]");a("blockquoteSpace","[atom > foo]");
a("blockquoteNoSpace","[atom >foo]");a("blockquoteNoBlankLine","foo","[atom > bar]");a("blockquoteSpace","[atom > foo]","[number > > foo]","[atom > > > foo]");
a("blockquoteThenParagraph","[atom >foo]","","bar");a("multiBlockquoteLazy","[atom >foo]","[atom bar]");a("multiBlockquoteLazyThenParagraph","[atom >foo]","[atom bar]","","hello");
a("multiBlockquote","[atom >foo]","[atom >bar]");a("multiBlockquoteThenParagraph","[atom >foo]","[atom >bar]","","hello");a("listAsterisk","foo","bar","","[variable-2 * foo]","[variable-2 * bar]");
a("listPlus","foo","bar","","[variable-2 + foo]","[variable-2 + bar]");a("listDash","foo","bar","","[variable-2 - foo]","[variable-2 - bar]");a("listNumber","foo","bar","","[variable-2 1. foo]","[variable-2 2. bar]");
a("listBogus","foo","1. bar","2. hello");a("listAsteriskFormatting","[variable-2 * ][variable-2&em *foo*][variable-2  bar]","[variable-2 * ][variable-2&strong **foo**][variable-2  bar]","[variable-2 * ][variable-2&strong **][variable-2&em&strong *foo**][variable-2&em *][variable-2  bar]","[variable-2 * ][variable-2&comment `foo`][variable-2  bar]");
a("listPlusFormatting","[variable-2 + ][variable-2&em *foo*][variable-2  bar]","[variable-2 + ][variable-2&strong **foo**][variable-2  bar]","[variable-2 + ][variable-2&strong **][variable-2&em&strong *foo**][variable-2&em *][variable-2  bar]","[variable-2 + ][variable-2&comment `foo`][variable-2  bar]");
a("listDashFormatting","[variable-2 - ][variable-2&em *foo*][variable-2  bar]","[variable-2 - ][variable-2&strong **foo**][variable-2  bar]","[variable-2 - ][variable-2&strong **][variable-2&em&strong *foo**][variable-2&em *][variable-2  bar]","[variable-2 - ][variable-2&comment `foo`][variable-2  bar]");
a("listNumberFormatting","[variable-2 1. ][variable-2&em *foo*][variable-2  bar]","[variable-2 2. ][variable-2&strong **foo**][variable-2  bar]","[variable-2 3. ][variable-2&strong **][variable-2&em&strong *foo**][variable-2&em *][variable-2  bar]","[variable-2 4. ][variable-2&comment `foo`][variable-2  bar]");
a("listParagraph","[variable-2 * foo]","","[variable-2 * bar]");a("listMultiParagraph","[variable-2 * foo]","","[variable-2 * bar]","","    [variable-2 hello]");
a("listMultiParagraphExtra","[variable-2 * foo]","","[variable-2 * bar]","","","    [variable-2 hello]");a("listMultiParagraphExtraSpace","[variable-2 * foo]","","[variable-2 * bar]","","     [variable-2 hello]","","    [variable-2 world]");
a("listTab","[variable-2 * foo]","","[variable-2 * bar]","","\t[variable-2 hello]");a("listNoIndent","[variable-2 * foo]","","[variable-2 * bar]","","hello");
a("blockquote","[variable-2 * foo]","","[variable-2 * bar]","","    [variable-2&atom > hello]");a("blockquoteCode","[variable-2 * foo]","","[variable-2 * bar]","","        [comment > hello]","","    [variable-2 world]");
a("blockquoteCodeText","[variable-2 * foo]","","    [variable-2 bar]","","        [comment hello]","","    [variable-2 world]");a("listAsteriskNested","[variable-2 * foo]","","    [variable-3 * bar]");
a("listPlusNested","[variable-2 + foo]","","    [variable-3 + bar]");a("listDashNested","[variable-2 - foo]","","    [variable-3 - bar]");a("listNumberNested","[variable-2 1. foo]","","    [variable-3 2. bar]");
a("listMixed","[variable-2 * foo]","","    [variable-3 + bar]","","        [keyword - hello]","","            [variable-2 1. world]");a("listBlockquote","[variable-2 * foo]","","    [variable-3 + bar]","","        [atom&variable-3 > hello]");
a("listCode","[variable-2 * foo]","","    [variable-3 + bar]","","            [comment hello]");a("listCodeIndentation","[variable-2 * foo]","","        [comment bar]","            [comment hello]","                [comment world]","        [comment foo]","    [variable-2 bar]");
a("listNested","[variable-2 * foo]","","    [variable-3 * bar]","","       [variable-2 hello]");a("listNested","[variable-2 * foo]","","    [variable-3 * bar]","","      [variable-3 * foo]");
a("listCodeText","[variable-2 * foo]","","        [comment bar]","","hello");a("hrSpace","[hr * * *]");a("hr","[hr ***]");a("hrLong","[hr *****]");a("hrSpaceDash","[hr - - -]");
a("hrDashLong","[hr ---------------------------------------]");a("linkTitle",'[link [[foo]]][string (http://example.com/ "bar")] hello');a("linkNoTitle","[link [[foo]]][string (http://example.com/)] bar");
a("linkImage","[link [[][tag ![[foo]]][string (http://example.com/)][link ]]][string (http://example.com/)] bar");a("linkEm","[link [[][link&em *foo*][link ]]][string (http://example.com/)] bar");
a("linkStrong","[link [[][link&strong **foo**][link ]]][string (http://example.com/)] bar");a("linkEmStrong","[link [[][link&strong **][link&em&strong *foo**][link&em *][link ]]][string (http://example.com/)] bar");
a("imageTitle",'[tag ![[foo]]][string (http://example.com/ "bar")] hello');a("imageNoTitle","[tag ![[foo]]][string (http://example.com/)] bar");a("imageAsterisks","[tag ![[*foo*]]][string (http://example.com/)] bar");
a("notALink","[[foo]] (bar)");a("linkReference","[link [[foo]]][string [[bar]]] hello");a("linkReferenceEm","[link [[][link&em *foo*][link ]]][string [[bar]]] hello");
a("linkReferenceStrong","[link [[][link&strong **foo**][link ]]][string [[bar]]] hello");a("linkReferenceEmStrong","[link [[][link&strong **][link&em&strong *foo**][link&em *][link ]]][string [[bar]]] hello");
a("linkReferenceSpace","[link [[foo]]] [string [[bar]]] hello");a("linkReferenceDoubleSpace","[[foo]]  [[bar]] hello");a("linkImplicit","[link [[foo]]][string [[]]] hello");
a("labelNoTitle","[link [[foo]]:] [string http://example.com/]");a("labelIndented","   [link [[foo]]:] [string http://example.com/]");a("labelSpaceTitle",'[link [[foo bar]]:] [string http://example.com/ "hello"]');
a("labelDoubleTitle",'[link [[foo bar]]:] [string http://example.com/ "hello"] "world"');a("labelTitleDoubleQuotes",'[link [[foo]]:] [string http://example.com/  "bar"]');
a("labelTitleSingleQuotes","[link [[foo]]:] [string http://example.com/  'bar']");a("labelTitleParenthese","[link [[foo]]:] [string http://example.com/  (bar)]");
a("labelTitleInvalid","[link [[foo]]:] [string http://example.com/] bar");a("labelLinkAngleBrackets",'[link [[foo]]:] [string <http://example.com/>  "bar"]');
a("labelTitleNextDoubleQuotes","[link [[foo]]:] [string http://example.com/]",'[string "bar"] hello');a("labelTitleNextSingleQuotes","[link [[foo]]:] [string http://example.com/]","[string 'bar'] hello");
a("labelTitleNextParenthese","[link [[foo]]:] [string http://example.com/]","[string (bar)] hello");a("labelTitleNextMixed","[link [[foo]]:] [string http://example.com/]",'(bar" hello');
a("linkWeb","[link <http://example.com/>] foo");a("linkWebDouble","[link <http://example.com/>] foo [link <http://example.com/>]");a("linkEmail","[link <user@example.com>] foo");
a("linkEmailDouble","[link <user@example.com>] foo [link <user@example.com>]");a("emAsterisk","[em *foo*] bar");a("emUnderscore","[em _foo_] bar");a("emInWordAsterisk","foo[em *bar*]hello");
a("emInWordUnderscore","foo[em _bar_]hello");a("emEscapedBySpaceIn","foo [em _bar _ hello_] world");a("emEscapedBySpaceOut","foo _ bar[em _hello_]world");
a("emIncompleteAsterisk","foo [em *bar]");a("emIncompleteUnderscore","foo [em _bar]");a("strongAsterisk","[strong **foo**] bar");a("strongUnderscore","[strong __foo__] bar");
a("emStrongAsterisk","[em *foo][em&strong **bar*][strong hello**] world");a("emStrongUnderscore","[em _foo][em&strong __bar_][strong hello__] world");a("emStrongMixed","[em _foo][em&strong **bar*hello__ world]");
a("emStrongMixed","[em *foo][em&strong __bar_hello** world]");a("escapeBacktick","foo \\`bar\\`");a("doubleEscapeBacktick","foo \\\\[comment `bar\\\\`]");
a("escapeAsterisk","foo \\*bar\\*");a("doubleEscapeAsterisk","foo \\\\[em *bar\\\\*]");a("escapeUnderscore","foo \\_bar\\_");a("doubleEscapeUnderscore","foo \\\\[em _bar\\\\_]");
a("escapeHash","\\# foo");a("doubleEscapeHash","\\\\# foo");a("taskList","[variable-2 * [ ]] bar]");a("fencedCodeBlocks","[comment ```]","foo","[comment ```]");
})();