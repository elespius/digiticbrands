(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () {
  function a(b, c) {
    for (var e, d = 0; d < c.length; d++) {
      e = c[d], e.enumerable = e.enumerable || !1, e.configurable = !0, 'value' in e && (e.writable = !0), Object.defineProperty(b, e.key, e);
    }
  }return function (b, c, d) {
    return c && a(b.prototype, c), d && a(b, d), b;
  };
}();function _classCallCheck(a, b) {
  if (!(a instanceof b)) throw new TypeError('Cannot call a class as a function');
}function _possibleConstructorReturn(a, b) {
  if (!a) throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');return b && ('object' == (typeof b === 'undefined' ? 'undefined' : _typeof(b)) || 'function' == typeof b) ? b : a;
}function _inherits(a, b) {
  if ('function' != typeof b && null !== b) throw new TypeError('Super expression must either be null or a function, not ' + (typeof b === 'undefined' ? 'undefined' : _typeof(b)));a.prototype = Object.create(b && b.prototype, { constructor: { value: a, enumerable: !1, writable: !0, configurable: !0 } }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b);
}var AlertElement = function (a) {
  function b() {
    return _classCallCheck(this, b), _possibleConstructorReturn(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this));
  }return _inherits(b, a), _createClass(b, [{ key: 'connectedCallback', value: function connectedCallback() {
      switch (this.container = document.createElement('div'), this.container.setAttribute('role', 'alert'), this.container.classList.add('alert'), this.container.classList.add('fade'), this.container.classList.add('show'), this.container.innerHTML = this.innerHTML, this.innerHTML = '', this.type) {case 'success':
          this.container.classList.add('alert-success');break;case 'warning':
          this.container.classList.add('alert-warning');break;case 'danger':
          this.container.classList.add('alert-danger');break;case 'info':
          this.container.classList.add('alert-info');break;default:
          this.container.classList.add('alert-info');}this.appendChild(this.container), this.button && 'true' === this.button && this.appendCloseButton();
    } }, { key: 'disconnectedCallback', value: function disconnectedCallback() {
      this.removeEventListener('close.bs.alert', this), this.removeEventListener('closed.bs.alert', this);var c = this.querySelector('div');c.firstChild && c.firstChild.removeEventListener('click', this);
    } }, { key: 'attributeChangedCallback', value: function attributeChangedCallback(c, d, e) {
      var f = this.querySelector('div');(c = f) && -1 < ['info', 'warning', 'danger', 'success'].indexOf(e) && (f.classList.remove('alert-' + d), f.classList.add('alert-' + e)), (c = 'button') && ('false' === e && this.removeCloseButton(), 'true' === e && this.appendCloseButton());
    } }, { key: 'close', value: function close() {
      this.dispatchCustomEvent('close.bs.alert');var c = this.querySelector('div');console.log(c), c.addEventListener('transitionend', function (d) {
        console.log(d.target);var e = new CustomEvent('closed.bs.alert');e.relatedTarget = this, this.dispatchEvent(e), this.removeEventListener('closed.bs.alert', this), this.parentNode.parentNode.removeChild(this.parentNode);
      }, !1), c.classList.remove('show');
    } }, { key: 'dispatchCustomEvent', value: function dispatchCustomEvent(c) {
      var d = new CustomEvent(c);d.relatedTarget = this, this.dispatchEvent(d), this.removeEventListener(c, this);
    } }, { key: 'appendCloseButton', value: function appendCloseButton() {
      var c = this.querySelector('div.alert');if (!this.querySelector('button[aria-label="Close"]') && c) {
        var d = document.createElement('button');d.setAttribute('aria-label', 'Close'), d.classList.add('close'), d.innerHTML = '<span aria-hidden="true">&times;</span>', c.firstChild ? c.insertBefore(d, c.firstChild) : c.appendChild(d), c.firstChild && c.firstChild.addEventListener('click', function () {
          this.parentNode.parentNode.close();
        });
      }
    } }, { key: 'removeCloseButton', value: function removeCloseButton() {
      var c = this.querySelector('button');c && (c.removeEventListener('click', this), c.parentNode.removeChild(c));
    } }, { key: 'type', get: function get() {
      return this.getAttribute('type');
    } }, { key: 'button', get: function get() {
      return this.getAttribute('button');
    } }], [{ key: 'observedAttributes', get: function get() {
      return ['type', 'button'];
    } }]), b;
}(HTMLElement);customElements.define('joomla-alert', AlertElement);

},{}]},{},[1]);
